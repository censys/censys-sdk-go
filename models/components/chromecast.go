// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Chromecast struct {
	Applications    []ChromecastApplication `json:"applications,omitempty"`
	IconURL         *string                 `json:"icon_url,omitempty"`
	IsActiveInput   *bool                   `json:"is_active_input,omitempty"`
	ProtocolVersion *int                    `json:"protocol_version,omitempty"`
	StatusText      *string                 `json:"status_text,omitempty"`
	UniversalAppID  *string                 `json:"universal_app_id,omitempty"`
	Volume          *ChromecastVolume       `json:"volume,omitempty"`
}

func (o *Chromecast) GetApplications() []ChromecastApplication {
	if o == nil {
		return nil
	}
	return o.Applications
}

func (o *Chromecast) GetIconURL() *string {
	if o == nil {
		return nil
	}
	return o.IconURL
}

func (o *Chromecast) GetIsActiveInput() *bool {
	if o == nil {
		return nil
	}
	return o.IsActiveInput
}

func (o *Chromecast) GetProtocolVersion() *int {
	if o == nil {
		return nil
	}
	return o.ProtocolVersion
}

func (o *Chromecast) GetStatusText() *string {
	if o == nil {
		return nil
	}
	return o.StatusText
}

func (o *Chromecast) GetUniversalAppID() *string {
	if o == nil {
		return nil
	}
	return o.UniversalAppID
}

func (o *Chromecast) GetVolume() *ChromecastVolume {
	if o == nil {
		return nil
	}
	return o.Volume
}
