// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type IpmiRMCPHeaderMessageClass struct {
	// Just the class part of the byte (lower 5 bits of raw)
	Class *int `json:"class,omitempty"`
	// True if the message is an acknowledgment to a previous message.
	IsAck *bool `json:"is_ack,omitempty"`
	// The human-readable name of the message class
	Name *string `json:"name,omitempty"`
	// The raw message class byte.
	Raw *int `json:"raw,omitempty"`
}

func (o *IpmiRMCPHeaderMessageClass) GetClass() *int {
	if o == nil {
		return nil
	}
	return o.Class
}

func (o *IpmiRMCPHeaderMessageClass) GetIsAck() *bool {
	if o == nil {
		return nil
	}
	return o.IsAck
}

func (o *IpmiRMCPHeaderMessageClass) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *IpmiRMCPHeaderMessageClass) GetRaw() *int {
	if o == nil {
		return nil
	}
	return o.Raw
}
