// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ZLint struct {
	// Whether the certificate's attributes triggered any error lints for non-conformance to the X.509 standard.
	ErrorsPresent *bool `json:"errors_present,omitempty"`
	// A list of lint names which failed, if applicable.
	FailedLints []string `json:"failed_lints,omitempty"`
	// Whether the certificate's attributes triggered any fatal lints for non-conformance to the X.509 standard.
	FatalsPresent *bool `json:"fatals_present,omitempty"`
	// Whether the certificate's attributes triggered any notice lints for non-conformance to the X.509 standard.
	NoticesPresent *bool `json:"notices_present,omitempty"`
	// An RFC-3339-formated timestamp indicating when the certificate was linted.
	Timestamp *string `json:"timestamp,omitempty"`
	// The version of Zlint used to lint the certificate.
	Version *int64 `json:"version,omitempty"`
	// Whether the certificate's attributes triggered any warning lints for non-conformance to the X.509 standard.
	WarningsPresent *bool `json:"warnings_present,omitempty"`
}

func (o *ZLint) GetErrorsPresent() *bool {
	if o == nil {
		return nil
	}
	return o.ErrorsPresent
}

func (o *ZLint) GetFailedLints() []string {
	if o == nil {
		return nil
	}
	return o.FailedLints
}

func (o *ZLint) GetFatalsPresent() *bool {
	if o == nil {
		return nil
	}
	return o.FatalsPresent
}

func (o *ZLint) GetNoticesPresent() *bool {
	if o == nil {
		return nil
	}
	return o.NoticesPresent
}

func (o *ZLint) GetTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

func (o *ZLint) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *ZLint) GetWarningsPresent() *bool {
	if o == nil {
		return nil
	}
	return o.WarningsPresent
}
