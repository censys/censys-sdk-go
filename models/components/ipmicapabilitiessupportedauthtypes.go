// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type IpmiCapabilitiesSupportedAuthTypes struct {
	// If true, the extended capabilities are present.
	Extended *bool `json:"extended,omitempty"`
	// True if the MD2 AuthType is supported.
	Md2 *bool `json:"md2,omitempty"`
	// True if the MD5 AuthType is supported.
	Md5 *bool `json:"md5,omitempty"`
	// True if the None AuthType is supported.
	None *bool `json:"none,omitempty"`
	// True if the OEM Proprietary AuthType is supported
	OemProprietary *bool `json:"oem_proprietary,omitempty"`
	// True if the Password AuthType is supported.
	Password *bool `json:"password,omitempty"`
	// The raw byte, with the bit mask etc
	Raw *int `json:"raw,omitempty"`
}

func (o *IpmiCapabilitiesSupportedAuthTypes) GetExtended() *bool {
	if o == nil {
		return nil
	}
	return o.Extended
}

func (o *IpmiCapabilitiesSupportedAuthTypes) GetMd2() *bool {
	if o == nil {
		return nil
	}
	return o.Md2
}

func (o *IpmiCapabilitiesSupportedAuthTypes) GetMd5() *bool {
	if o == nil {
		return nil
	}
	return o.Md5
}

func (o *IpmiCapabilitiesSupportedAuthTypes) GetNone() *bool {
	if o == nil {
		return nil
	}
	return o.None
}

func (o *IpmiCapabilitiesSupportedAuthTypes) GetOemProprietary() *bool {
	if o == nil {
		return nil
	}
	return o.OemProprietary
}

func (o *IpmiCapabilitiesSupportedAuthTypes) GetPassword() *bool {
	if o == nil {
		return nil
	}
	return o.Password
}

func (o *IpmiCapabilitiesSupportedAuthTypes) GetRaw() *int {
	if o == nil {
		return nil
	}
	return o.Raw
}
