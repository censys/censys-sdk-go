// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Evidence struct {
	DataPath         *string `json:"data_path,omitempty"`
	Exists           *bool   `json:"exists,omitempty"`
	FoundValue       *string `json:"found_value,omitempty"`
	LiteralMatch     *string `json:"literal_match,omitempty"`
	Negative         *bool   `json:"negative,omitempty"`
	Proprietary      *bool   `json:"proprietary,omitempty"`
	Regex            *string `json:"regex,omitempty"`
	SemverExpression *string `json:"semver_expression,omitempty"`
}

func (o *Evidence) GetDataPath() *string {
	if o == nil {
		return nil
	}
	return o.DataPath
}

func (o *Evidence) GetExists() *bool {
	if o == nil {
		return nil
	}
	return o.Exists
}

func (o *Evidence) GetFoundValue() *string {
	if o == nil {
		return nil
	}
	return o.FoundValue
}

func (o *Evidence) GetLiteralMatch() *string {
	if o == nil {
		return nil
	}
	return o.LiteralMatch
}

func (o *Evidence) GetNegative() *bool {
	if o == nil {
		return nil
	}
	return o.Negative
}

func (o *Evidence) GetProprietary() *bool {
	if o == nil {
		return nil
	}
	return o.Proprietary
}

func (o *Evidence) GetRegex() *string {
	if o == nil {
		return nil
	}
	return o.Regex
}

func (o *Evidence) GetSemverExpression() *string {
	if o == nil {
		return nil
	}
	return o.SemverExpression
}
