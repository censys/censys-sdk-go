// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type CertificateParsed struct {
	Extensions *CertificateExtensions `json:"extensions,omitempty"`
	Issuer     *DistinguishedName     `json:"issuer,omitempty"`
	// Distinguished Name of the entity that has signed and issued the certificate.
	IssuerDn *string `json:"issuer_dn,omitempty"`
	Ja4x     *string `json:"ja4x,omitempty"`
	Redacted *bool   `json:"redacted,omitempty"`
	// Issuer-specific identifier of the certificate.
	SerialNumber *string `json:"serial_number,omitempty"`
	// Issuer-specific identifier of the certificate, represented as hexadecimal.
	SerialNumberHex *string            `json:"serial_number_hex,omitempty"`
	Signature       *Signature         `json:"signature,omitempty"`
	Subject         *DistinguishedName `json:"subject,omitempty"`
	// Distinguished Name of the entity associated with the public key.
	SubjectDn         *string         `json:"subject_dn,omitempty"`
	SubjectKeyInfo    *SubjectKeyInfo `json:"subject_key_info,omitempty"`
	UnknownExtensions []Extension     `json:"unknown_extensions,omitempty"`
	ValidityPeriod    *ValidityPeriod `json:"validity_period,omitempty"`
	Version           *int            `json:"version,omitempty"`
}

func (o *CertificateParsed) GetExtensions() *CertificateExtensions {
	if o == nil {
		return nil
	}
	return o.Extensions
}

func (o *CertificateParsed) GetIssuer() *DistinguishedName {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *CertificateParsed) GetIssuerDn() *string {
	if o == nil {
		return nil
	}
	return o.IssuerDn
}

func (o *CertificateParsed) GetJa4x() *string {
	if o == nil {
		return nil
	}
	return o.Ja4x
}

func (o *CertificateParsed) GetRedacted() *bool {
	if o == nil {
		return nil
	}
	return o.Redacted
}

func (o *CertificateParsed) GetSerialNumber() *string {
	if o == nil {
		return nil
	}
	return o.SerialNumber
}

func (o *CertificateParsed) GetSerialNumberHex() *string {
	if o == nil {
		return nil
	}
	return o.SerialNumberHex
}

func (o *CertificateParsed) GetSignature() *Signature {
	if o == nil {
		return nil
	}
	return o.Signature
}

func (o *CertificateParsed) GetSubject() *DistinguishedName {
	if o == nil {
		return nil
	}
	return o.Subject
}

func (o *CertificateParsed) GetSubjectDn() *string {
	if o == nil {
		return nil
	}
	return o.SubjectDn
}

func (o *CertificateParsed) GetSubjectKeyInfo() *SubjectKeyInfo {
	if o == nil {
		return nil
	}
	return o.SubjectKeyInfo
}

func (o *CertificateParsed) GetUnknownExtensions() []Extension {
	if o == nil {
		return nil
	}
	return o.UnknownExtensions
}

func (o *CertificateParsed) GetValidityPeriod() *ValidityPeriod {
	if o == nil {
		return nil
	}
	return o.ValidityPeriod
}

func (o *CertificateParsed) GetVersion() *int {
	if o == nil {
		return nil
	}
	return o.Version
}
