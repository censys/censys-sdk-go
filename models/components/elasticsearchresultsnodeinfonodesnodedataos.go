// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ElasticSearchResultsNodeInfoNodesNodeDataOS struct {
	AllocatedProc     *int    `json:"allocated_proc,omitempty"`
	Arch              *string `json:"arch,omitempty"`
	AvailableProc     *int    `json:"available_proc,omitempty"`
	Name              *string `json:"name,omitempty"`
	PrettyName        *string `json:"pretty_name,omitempty"`
	RefreshIntervalMs *int    `json:"refresh_interval_ms,omitempty"`
	Version           *string `json:"version,omitempty"`
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataOS) GetAllocatedProc() *int {
	if o == nil {
		return nil
	}
	return o.AllocatedProc
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataOS) GetArch() *string {
	if o == nil {
		return nil
	}
	return o.Arch
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataOS) GetAvailableProc() *int {
	if o == nil {
		return nil
	}
	return o.AvailableProc
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataOS) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataOS) GetPrettyName() *string {
	if o == nil {
		return nil
	}
	return o.PrettyName
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataOS) GetRefreshIntervalMs() *int {
	if o == nil {
		return nil
	}
	return o.RefreshIntervalMs
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataOS) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}
