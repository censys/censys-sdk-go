// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type SSH struct {
	AlgorithmSelection *SSHAlgorithmSelection `json:"algorithm_selection,omitempty"`
	EndpointID         *SSHEndpointID         `json:"endpoint_id,omitempty"`
	HasshFingerprint   *string                `json:"hassh_fingerprint,omitempty"`
	KexInitMessage     *SSHKexInitMessage     `json:"kex_init_message,omitempty"`
	ServerHostKey      *SSHServerHostKey      `json:"server_host_key,omitempty"`
}

func (o *SSH) GetAlgorithmSelection() *SSHAlgorithmSelection {
	if o == nil {
		return nil
	}
	return o.AlgorithmSelection
}

func (o *SSH) GetEndpointID() *SSHEndpointID {
	if o == nil {
		return nil
	}
	return o.EndpointID
}

func (o *SSH) GetHasshFingerprint() *string {
	if o == nil {
		return nil
	}
	return o.HasshFingerprint
}

func (o *SSH) GetKexInitMessage() *SSHKexInitMessage {
	if o == nil {
		return nil
	}
	return o.KexInitMessage
}

func (o *SSH) GetServerHostKey() *SSHServerHostKey {
	if o == nil {
		return nil
	}
	return o.ServerHostKey
}
