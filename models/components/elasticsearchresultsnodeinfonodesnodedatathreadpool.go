// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ElasticSearchResultsNodeInfoNodesNodeDataThreadPool struct {
	KeepAlive *string `json:"keep_alive,omitempty"`
	Max       *int    `json:"max,omitempty"`
	Min       *int    `json:"min,omitempty"`
	QueueSize *int    `json:"queue_size,omitempty"`
	Type      *string `json:"type,omitempty"`
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataThreadPool) GetKeepAlive() *string {
	if o == nil {
		return nil
	}
	return o.KeepAlive
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataThreadPool) GetMax() *int {
	if o == nil {
		return nil
	}
	return o.Max
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataThreadPool) GetMin() *int {
	if o == nil {
		return nil
	}
	return o.Min
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataThreadPool) GetQueueSize() *int {
	if o == nil {
		return nil
	}
	return o.QueueSize
}

func (o *ElasticSearchResultsNodeInfoNodesNodeDataThreadPool) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}
