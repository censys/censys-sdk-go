// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type SmbSmbCapabilities struct {
	// Server supports Distributed File System
	SmbDfsSupport *bool `json:"smb_dfs_support,omitempty"`
	// Server supports directory leasing
	SmbDirectoryLeasingSupport *bool `json:"smb_directory_leasing_support,omitempty"`
	// Server supports encryption
	SmbEncryptionSupport *bool `json:"smb_encryption_support,omitempty"`
	// Server supports Leasing
	SmbLeasingSupport *bool `json:"smb_leasing_support,omitempty"`
	// Server supports multiple channels per session
	SmbMultichanSupport *bool `json:"smb_multichan_support,omitempty"`
	// Server supports multi-credit operations
	SmbMulticreditSupport *bool `json:"smb_multicredit_support,omitempty"`
	// Server supports persistent handles
	SmbPersistentHandleSupport *bool `json:"smb_persistent_handle_support,omitempty"`
}

func (o *SmbSmbCapabilities) GetSmbDfsSupport() *bool {
	if o == nil {
		return nil
	}
	return o.SmbDfsSupport
}

func (o *SmbSmbCapabilities) GetSmbDirectoryLeasingSupport() *bool {
	if o == nil {
		return nil
	}
	return o.SmbDirectoryLeasingSupport
}

func (o *SmbSmbCapabilities) GetSmbEncryptionSupport() *bool {
	if o == nil {
		return nil
	}
	return o.SmbEncryptionSupport
}

func (o *SmbSmbCapabilities) GetSmbLeasingSupport() *bool {
	if o == nil {
		return nil
	}
	return o.SmbLeasingSupport
}

func (o *SmbSmbCapabilities) GetSmbMultichanSupport() *bool {
	if o == nil {
		return nil
	}
	return o.SmbMultichanSupport
}

func (o *SmbSmbCapabilities) GetSmbMulticreditSupport() *bool {
	if o == nil {
		return nil
	}
	return o.SmbMulticreditSupport
}

func (o *SmbSmbCapabilities) GetSmbPersistentHandleSupport() *bool {
	if o == nil {
		return nil
	}
	return o.SmbPersistentHandleSupport
}
