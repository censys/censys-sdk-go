// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type HostTimelineEvent struct {
	EndpointScanned    *EndpointScanned    `json:"endpoint_scanned,omitempty"`
	EventTime          *string             `json:"event_time,omitempty"`
	ForwardDNSResolved *ForwardDNSResolved `json:"forward_dns_resolved,omitempty"`
	JarmScanned        *JarmScanned        `json:"jarm_scanned,omitempty"`
	LocationUpdated    *LocationUpdated    `json:"location_updated,omitempty"`
	ReverseDNSResolved *ReverseDNSResolved `json:"reverse_dns_resolved,omitempty"`
	RouteUpdated       *RouteUpdated       `json:"route_updated,omitempty"`
	ServiceScanned     *ServiceScanned     `json:"service_scanned,omitempty"`
	WhoisUpdated       *WhoisUpdated       `json:"whois_updated,omitempty"`
}

func (o *HostTimelineEvent) GetEndpointScanned() *EndpointScanned {
	if o == nil {
		return nil
	}
	return o.EndpointScanned
}

func (o *HostTimelineEvent) GetEventTime() *string {
	if o == nil {
		return nil
	}
	return o.EventTime
}

func (o *HostTimelineEvent) GetForwardDNSResolved() *ForwardDNSResolved {
	if o == nil {
		return nil
	}
	return o.ForwardDNSResolved
}

func (o *HostTimelineEvent) GetJarmScanned() *JarmScanned {
	if o == nil {
		return nil
	}
	return o.JarmScanned
}

func (o *HostTimelineEvent) GetLocationUpdated() *LocationUpdated {
	if o == nil {
		return nil
	}
	return o.LocationUpdated
}

func (o *HostTimelineEvent) GetReverseDNSResolved() *ReverseDNSResolved {
	if o == nil {
		return nil
	}
	return o.ReverseDNSResolved
}

func (o *HostTimelineEvent) GetRouteUpdated() *RouteUpdated {
	if o == nil {
		return nil
	}
	return o.RouteUpdated
}

func (o *HostTimelineEvent) GetServiceScanned() *ServiceScanned {
	if o == nil {
		return nil
	}
	return o.ServiceScanned
}

func (o *HostTimelineEvent) GetWhoisUpdated() *WhoisUpdated {
	if o == nil {
		return nil
	}
	return o.WhoisUpdated
}
