// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Memcached struct {
	// Whether server responds to a handshake using the ASCII wire format of the protocol.
	ASCIIBindingProtocolEnabled *bool `json:"ascii_binding_protocol_enabled,omitempty"`
	// Whether server responds to a handshake using the binary wire format of the protocol.
	BinaryBindingProtocolEnabled *bool `json:"binary_binding_protocol_enabled,omitempty"`
	// Whether the server on the UDP port with the same number responds to a handshake using the ASCII wire format of the protocol.
	RespondsToUDP *bool `json:"responds_to_udp,omitempty"`
	// Server information returned in response to the stats command, as a set of key:value pairs.
	Stats map[string]string `json:"stats,omitempty"`
	// The Memcached version indicated in the server's response.
	Version *string `json:"version,omitempty"`
}

func (o *Memcached) GetASCIIBindingProtocolEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ASCIIBindingProtocolEnabled
}

func (o *Memcached) GetBinaryBindingProtocolEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.BinaryBindingProtocolEnabled
}

func (o *Memcached) GetRespondsToUDP() *bool {
	if o == nil {
		return nil
	}
	return o.RespondsToUDP
}

func (o *Memcached) GetStats() map[string]string {
	if o == nil {
		return nil
	}
	return o.Stats
}

func (o *Memcached) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}
