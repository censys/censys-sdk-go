// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ExtendedKeyUsage struct {
	Any                            *bool    `json:"any,omitempty"`
	AppleCodeSigning               *bool    `json:"apple_code_signing,omitempty"`
	AppleCodeSigningDevelopment    *bool    `json:"apple_code_signing_development,omitempty"`
	AppleCodeSigningThirdParty     *bool    `json:"apple_code_signing_third_party,omitempty"`
	AppleCryptoDevelopmentEnv      *bool    `json:"apple_crypto_development_env,omitempty"`
	AppleCryptoEnv                 *bool    `json:"apple_crypto_env,omitempty"`
	AppleCryptoMaintenanceEnv      *bool    `json:"apple_crypto_maintenance_env,omitempty"`
	AppleCryptoProductionEnv       *bool    `json:"apple_crypto_production_env,omitempty"`
	AppleCryptoQos                 *bool    `json:"apple_crypto_qos,omitempty"`
	AppleCryptoTestEnv             *bool    `json:"apple_crypto_test_env,omitempty"`
	AppleCryptoTier0Qos            *bool    `json:"apple_crypto_tier0_qos,omitempty"`
	AppleCryptoTier1Qos            *bool    `json:"apple_crypto_tier1_qos,omitempty"`
	AppleCryptoTier2Qos            *bool    `json:"apple_crypto_tier2_qos,omitempty"`
	AppleCryptoTier3Qos            *bool    `json:"apple_crypto_tier3_qos,omitempty"`
	AppleIchatEncryption           *bool    `json:"apple_ichat_encryption,omitempty"`
	AppleIchatSigning              *bool    `json:"apple_ichat_signing,omitempty"`
	AppleResourceSigning           *bool    `json:"apple_resource_signing,omitempty"`
	AppleSoftwareUpdateSigning     *bool    `json:"apple_software_update_signing,omitempty"`
	AppleSystemIdentity            *bool    `json:"apple_system_identity,omitempty"`
	ClientAuth                     *bool    `json:"client_auth,omitempty"`
	CodeSigning                    *bool    `json:"code_signing,omitempty"`
	Dvcs                           *bool    `json:"dvcs,omitempty"`
	EapOverLan                     *bool    `json:"eap_over_lan,omitempty"`
	EapOverPpp                     *bool    `json:"eap_over_ppp,omitempty"`
	EmailProtection                *bool    `json:"email_protection,omitempty"`
	IpsecEndSystem                 *bool    `json:"ipsec_end_system,omitempty"`
	IpsecIntermediateSystemUsage   *bool    `json:"ipsec_intermediate_system_usage,omitempty"`
	IpsecTunnel                    *bool    `json:"ipsec_tunnel,omitempty"`
	IpsecUser                      *bool    `json:"ipsec_user,omitempty"`
	MicrosoftCaExchange            *bool    `json:"microsoft_ca_exchange,omitempty"`
	MicrosoftCertTrustListSigning  *bool    `json:"microsoft_cert_trust_list_signing,omitempty"`
	MicrosoftCspSignature          *bool    `json:"microsoft_csp_signature,omitempty"`
	MicrosoftDocumentSigning       *bool    `json:"microsoft_document_signing,omitempty"`
	MicrosoftDrm                   *bool    `json:"microsoft_drm,omitempty"`
	MicrosoftDrmIndividualization  *bool    `json:"microsoft_drm_individualization,omitempty"`
	MicrosoftEfsRecovery           *bool    `json:"microsoft_efs_recovery,omitempty"`
	MicrosoftEmbeddedNtCrypto      *bool    `json:"microsoft_embedded_nt_crypto,omitempty"`
	MicrosoftEncryptedFileSystem   *bool    `json:"microsoft_encrypted_file_system,omitempty"`
	MicrosoftEnrollmentAgent       *bool    `json:"microsoft_enrollment_agent,omitempty"`
	MicrosoftKernelModeCodeSigning *bool    `json:"microsoft_kernel_mode_code_signing,omitempty"`
	MicrosoftKeyRecovery21         *bool    `json:"microsoft_key_recovery_21,omitempty"`
	MicrosoftKeyRecovery3          *bool    `json:"microsoft_key_recovery_3,omitempty"`
	MicrosoftLicenseServer         *bool    `json:"microsoft_license_server,omitempty"`
	MicrosoftLicenses              *bool    `json:"microsoft_licenses,omitempty"`
	MicrosoftLifetimeSigning       *bool    `json:"microsoft_lifetime_signing,omitempty"`
	MicrosoftMobileDeviceSoftware  *bool    `json:"microsoft_mobile_device_software,omitempty"`
	MicrosoftNt5Crypto             *bool    `json:"microsoft_nt5_crypto,omitempty"`
	MicrosoftOemWhqlCrypto         *bool    `json:"microsoft_oem_whql_crypto,omitempty"`
	MicrosoftQualifiedSubordinate  *bool    `json:"microsoft_qualified_subordinate,omitempty"`
	MicrosoftRootListSigner        *bool    `json:"microsoft_root_list_signer,omitempty"`
	MicrosoftServerGatedCrypto     *bool    `json:"microsoft_server_gated_crypto,omitempty"`
	MicrosoftSgcSerialized         *bool    `json:"microsoft_sgc_serialized,omitempty"`
	MicrosoftSmartDisplay          *bool    `json:"microsoft_smart_display,omitempty"`
	MicrosoftSmartcardLogon        *bool    `json:"microsoft_smartcard_logon,omitempty"`
	MicrosoftSystemHealth          *bool    `json:"microsoft_system_health,omitempty"`
	MicrosoftSystemHealthLoophole  *bool    `json:"microsoft_system_health_loophole,omitempty"`
	MicrosoftTimestampSigning      *bool    `json:"microsoft_timestamp_signing,omitempty"`
	MicrosoftWhqlCrypto            *bool    `json:"microsoft_whql_crypto,omitempty"`
	NetscapeServerGatedCrypto      *bool    `json:"netscape_server_gated_crypto,omitempty"`
	OcspSigning                    *bool    `json:"ocsp_signing,omitempty"`
	SbgpCertAaServiceAuth          *bool    `json:"sbgp_cert_aa_service_auth,omitempty"`
	ServerAuth                     *bool    `json:"server_auth,omitempty"`
	TimeStamping                   *bool    `json:"time_stamping,omitempty"`
	Unknown                        []string `json:"unknown,omitempty"`
}

func (o *ExtendedKeyUsage) GetAny() *bool {
	if o == nil {
		return nil
	}
	return o.Any
}

func (o *ExtendedKeyUsage) GetAppleCodeSigning() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCodeSigning
}

func (o *ExtendedKeyUsage) GetAppleCodeSigningDevelopment() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCodeSigningDevelopment
}

func (o *ExtendedKeyUsage) GetAppleCodeSigningThirdParty() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCodeSigningThirdParty
}

func (o *ExtendedKeyUsage) GetAppleCryptoDevelopmentEnv() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoDevelopmentEnv
}

func (o *ExtendedKeyUsage) GetAppleCryptoEnv() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoEnv
}

func (o *ExtendedKeyUsage) GetAppleCryptoMaintenanceEnv() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoMaintenanceEnv
}

func (o *ExtendedKeyUsage) GetAppleCryptoProductionEnv() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoProductionEnv
}

func (o *ExtendedKeyUsage) GetAppleCryptoQos() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoQos
}

func (o *ExtendedKeyUsage) GetAppleCryptoTestEnv() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoTestEnv
}

func (o *ExtendedKeyUsage) GetAppleCryptoTier0Qos() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoTier0Qos
}

func (o *ExtendedKeyUsage) GetAppleCryptoTier1Qos() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoTier1Qos
}

func (o *ExtendedKeyUsage) GetAppleCryptoTier2Qos() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoTier2Qos
}

func (o *ExtendedKeyUsage) GetAppleCryptoTier3Qos() *bool {
	if o == nil {
		return nil
	}
	return o.AppleCryptoTier3Qos
}

func (o *ExtendedKeyUsage) GetAppleIchatEncryption() *bool {
	if o == nil {
		return nil
	}
	return o.AppleIchatEncryption
}

func (o *ExtendedKeyUsage) GetAppleIchatSigning() *bool {
	if o == nil {
		return nil
	}
	return o.AppleIchatSigning
}

func (o *ExtendedKeyUsage) GetAppleResourceSigning() *bool {
	if o == nil {
		return nil
	}
	return o.AppleResourceSigning
}

func (o *ExtendedKeyUsage) GetAppleSoftwareUpdateSigning() *bool {
	if o == nil {
		return nil
	}
	return o.AppleSoftwareUpdateSigning
}

func (o *ExtendedKeyUsage) GetAppleSystemIdentity() *bool {
	if o == nil {
		return nil
	}
	return o.AppleSystemIdentity
}

func (o *ExtendedKeyUsage) GetClientAuth() *bool {
	if o == nil {
		return nil
	}
	return o.ClientAuth
}

func (o *ExtendedKeyUsage) GetCodeSigning() *bool {
	if o == nil {
		return nil
	}
	return o.CodeSigning
}

func (o *ExtendedKeyUsage) GetDvcs() *bool {
	if o == nil {
		return nil
	}
	return o.Dvcs
}

func (o *ExtendedKeyUsage) GetEapOverLan() *bool {
	if o == nil {
		return nil
	}
	return o.EapOverLan
}

func (o *ExtendedKeyUsage) GetEapOverPpp() *bool {
	if o == nil {
		return nil
	}
	return o.EapOverPpp
}

func (o *ExtendedKeyUsage) GetEmailProtection() *bool {
	if o == nil {
		return nil
	}
	return o.EmailProtection
}

func (o *ExtendedKeyUsage) GetIpsecEndSystem() *bool {
	if o == nil {
		return nil
	}
	return o.IpsecEndSystem
}

func (o *ExtendedKeyUsage) GetIpsecIntermediateSystemUsage() *bool {
	if o == nil {
		return nil
	}
	return o.IpsecIntermediateSystemUsage
}

func (o *ExtendedKeyUsage) GetIpsecTunnel() *bool {
	if o == nil {
		return nil
	}
	return o.IpsecTunnel
}

func (o *ExtendedKeyUsage) GetIpsecUser() *bool {
	if o == nil {
		return nil
	}
	return o.IpsecUser
}

func (o *ExtendedKeyUsage) GetMicrosoftCaExchange() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftCaExchange
}

func (o *ExtendedKeyUsage) GetMicrosoftCertTrustListSigning() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftCertTrustListSigning
}

func (o *ExtendedKeyUsage) GetMicrosoftCspSignature() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftCspSignature
}

func (o *ExtendedKeyUsage) GetMicrosoftDocumentSigning() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftDocumentSigning
}

func (o *ExtendedKeyUsage) GetMicrosoftDrm() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftDrm
}

func (o *ExtendedKeyUsage) GetMicrosoftDrmIndividualization() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftDrmIndividualization
}

func (o *ExtendedKeyUsage) GetMicrosoftEfsRecovery() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftEfsRecovery
}

func (o *ExtendedKeyUsage) GetMicrosoftEmbeddedNtCrypto() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftEmbeddedNtCrypto
}

func (o *ExtendedKeyUsage) GetMicrosoftEncryptedFileSystem() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftEncryptedFileSystem
}

func (o *ExtendedKeyUsage) GetMicrosoftEnrollmentAgent() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftEnrollmentAgent
}

func (o *ExtendedKeyUsage) GetMicrosoftKernelModeCodeSigning() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftKernelModeCodeSigning
}

func (o *ExtendedKeyUsage) GetMicrosoftKeyRecovery21() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftKeyRecovery21
}

func (o *ExtendedKeyUsage) GetMicrosoftKeyRecovery3() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftKeyRecovery3
}

func (o *ExtendedKeyUsage) GetMicrosoftLicenseServer() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftLicenseServer
}

func (o *ExtendedKeyUsage) GetMicrosoftLicenses() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftLicenses
}

func (o *ExtendedKeyUsage) GetMicrosoftLifetimeSigning() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftLifetimeSigning
}

func (o *ExtendedKeyUsage) GetMicrosoftMobileDeviceSoftware() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftMobileDeviceSoftware
}

func (o *ExtendedKeyUsage) GetMicrosoftNt5Crypto() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftNt5Crypto
}

func (o *ExtendedKeyUsage) GetMicrosoftOemWhqlCrypto() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftOemWhqlCrypto
}

func (o *ExtendedKeyUsage) GetMicrosoftQualifiedSubordinate() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftQualifiedSubordinate
}

func (o *ExtendedKeyUsage) GetMicrosoftRootListSigner() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftRootListSigner
}

func (o *ExtendedKeyUsage) GetMicrosoftServerGatedCrypto() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftServerGatedCrypto
}

func (o *ExtendedKeyUsage) GetMicrosoftSgcSerialized() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftSgcSerialized
}

func (o *ExtendedKeyUsage) GetMicrosoftSmartDisplay() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftSmartDisplay
}

func (o *ExtendedKeyUsage) GetMicrosoftSmartcardLogon() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftSmartcardLogon
}

func (o *ExtendedKeyUsage) GetMicrosoftSystemHealth() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftSystemHealth
}

func (o *ExtendedKeyUsage) GetMicrosoftSystemHealthLoophole() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftSystemHealthLoophole
}

func (o *ExtendedKeyUsage) GetMicrosoftTimestampSigning() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftTimestampSigning
}

func (o *ExtendedKeyUsage) GetMicrosoftWhqlCrypto() *bool {
	if o == nil {
		return nil
	}
	return o.MicrosoftWhqlCrypto
}

func (o *ExtendedKeyUsage) GetNetscapeServerGatedCrypto() *bool {
	if o == nil {
		return nil
	}
	return o.NetscapeServerGatedCrypto
}

func (o *ExtendedKeyUsage) GetOcspSigning() *bool {
	if o == nil {
		return nil
	}
	return o.OcspSigning
}

func (o *ExtendedKeyUsage) GetSbgpCertAaServiceAuth() *bool {
	if o == nil {
		return nil
	}
	return o.SbgpCertAaServiceAuth
}

func (o *ExtendedKeyUsage) GetServerAuth() *bool {
	if o == nil {
		return nil
	}
	return o.ServerAuth
}

func (o *ExtendedKeyUsage) GetTimeStamping() *bool {
	if o == nil {
		return nil
	}
	return o.TimeStamping
}

func (o *ExtendedKeyUsage) GetUnknown() []string {
	if o == nil {
		return nil
	}
	return o.Unknown
}
