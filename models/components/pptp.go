// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Pptp struct {
	BearerMessage   *PptpResponseInfo `json:"bearer_message,omitempty"`
	ErrorMessage    *PptpResponseInfo `json:"error_message,omitempty"`
	Firmware        *PptpVersion      `json:"firmware,omitempty"`
	FramingMessage  *PptpResponseInfo `json:"framing_message,omitempty"`
	Hostname        *string           `json:"hostname,omitempty"`
	MaximumChannels *int              `json:"maximum_channels,omitempty"`
	Protocol        *PptpVersion      `json:"protocol,omitempty"`
	ResultMessage   *PptpResponseInfo `json:"result_message,omitempty"`
	Vendor          *string           `json:"vendor,omitempty"`
}

func (o *Pptp) GetBearerMessage() *PptpResponseInfo {
	if o == nil {
		return nil
	}
	return o.BearerMessage
}

func (o *Pptp) GetErrorMessage() *PptpResponseInfo {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *Pptp) GetFirmware() *PptpVersion {
	if o == nil {
		return nil
	}
	return o.Firmware
}

func (o *Pptp) GetFramingMessage() *PptpResponseInfo {
	if o == nil {
		return nil
	}
	return o.FramingMessage
}

func (o *Pptp) GetHostname() *string {
	if o == nil {
		return nil
	}
	return o.Hostname
}

func (o *Pptp) GetMaximumChannels() *int {
	if o == nil {
		return nil
	}
	return o.MaximumChannels
}

func (o *Pptp) GetProtocol() *PptpVersion {
	if o == nil {
		return nil
	}
	return o.Protocol
}

func (o *Pptp) GetResultMessage() *PptpResponseInfo {
	if o == nil {
		return nil
	}
	return o.ResultMessage
}

func (o *Pptp) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}
