// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type L2Tp struct {
	HelloReceived      *bool        `json:"hello_received,omitempty"`
	OrderedMessagesRaw []string     `json:"ordered_messages_raw,omitempty"`
	SccnReceived       *bool        `json:"sccn_received,omitempty"`
	Sccrp              *L2TpSccrp   `json:"sccrp,omitempty"`
	SccrpReceived      *bool        `json:"sccrp_received,omitempty"`
	SccrqReceived      *bool        `json:"sccrq_received,omitempty"`
	StopSccn           *L2TpStopCcn `json:"stop_sccn,omitempty"`
	StopSccnReceived   *bool        `json:"stop_sccn_received,omitempty"`
	ZlbReceived        *bool        `json:"zlb_received,omitempty"`
}

func (o *L2Tp) GetHelloReceived() *bool {
	if o == nil {
		return nil
	}
	return o.HelloReceived
}

func (o *L2Tp) GetOrderedMessagesRaw() []string {
	if o == nil {
		return nil
	}
	return o.OrderedMessagesRaw
}

func (o *L2Tp) GetSccnReceived() *bool {
	if o == nil {
		return nil
	}
	return o.SccnReceived
}

func (o *L2Tp) GetSccrp() *L2TpSccrp {
	if o == nil {
		return nil
	}
	return o.Sccrp
}

func (o *L2Tp) GetSccrpReceived() *bool {
	if o == nil {
		return nil
	}
	return o.SccrpReceived
}

func (o *L2Tp) GetSccrqReceived() *bool {
	if o == nil {
		return nil
	}
	return o.SccrqReceived
}

func (o *L2Tp) GetStopSccn() *L2TpStopCcn {
	if o == nil {
		return nil
	}
	return o.StopSccn
}

func (o *L2Tp) GetStopSccnReceived() *bool {
	if o == nil {
		return nil
	}
	return o.StopSccnReceived
}

func (o *L2Tp) GetZlbReceived() *bool {
	if o == nil {
		return nil
	}
	return o.ZlbReceived
}
