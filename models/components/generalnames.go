// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type GeneralNames struct {
	// The parsed directoryName entries in the GeneralName.
	DirectoryNames []DistinguishedName `json:"directory_names,omitempty"`
	// The parsed dNSName entries in the GeneralName.
	DNSNames []string `json:"dns_names,omitempty"`
	// The parsed eDIPartyName entries in the GeneralName.
	EdiPartyNames []EdiPartyName `json:"edi_party_names,omitempty"`
	// The parsed rfc822Name entries in the GeneralName.
	EmailAddresses []string `json:"email_addresses,omitempty"`
	// The parsed ipAddress entries in the GeneralName.
	IPAddresses []string `json:"ip_addresses,omitempty"`
	// The parsed otherName entries in the GeneralName. An arbitrary binary value identified by an OID.
	OtherNames []OtherName `json:"other_names,omitempty"`
	// The parsed registeredID entries in the GeneralName. Stored in dotted-decimal format.
	RegisteredIds []string `json:"registered_ids,omitempty"`
	// The parsed uniformResourceIdentifier entries in the GeneralName.
	UniformResourceIdentifiers []string `json:"uniform_resource_identifiers,omitempty"`
}

func (o *GeneralNames) GetDirectoryNames() []DistinguishedName {
	if o == nil {
		return nil
	}
	return o.DirectoryNames
}

func (o *GeneralNames) GetDNSNames() []string {
	if o == nil {
		return nil
	}
	return o.DNSNames
}

func (o *GeneralNames) GetEdiPartyNames() []EdiPartyName {
	if o == nil {
		return nil
	}
	return o.EdiPartyNames
}

func (o *GeneralNames) GetEmailAddresses() []string {
	if o == nil {
		return nil
	}
	return o.EmailAddresses
}

func (o *GeneralNames) GetIPAddresses() []string {
	if o == nil {
		return nil
	}
	return o.IPAddresses
}

func (o *GeneralNames) GetOtherNames() []OtherName {
	if o == nil {
		return nil
	}
	return o.OtherNames
}

func (o *GeneralNames) GetRegisteredIds() []string {
	if o == nil {
		return nil
	}
	return o.RegisteredIds
}

func (o *GeneralNames) GetUniformResourceIdentifiers() []string {
	if o == nil {
		return nil
	}
	return o.UniformResourceIdentifiers
}
