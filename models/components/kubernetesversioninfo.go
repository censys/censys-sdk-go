// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type KubernetesVersionInfo struct {
	// Date version was built.
	BuildDate *string `json:"build_date,omitempty"`
	// Go Compiler used
	Compiler *string `json:"compiler,omitempty"`
	// Git commit version built from.
	GitCommit *string `json:"git_commit,omitempty"`
	// State of the tree when built.
	GitTreeState *string `json:"git_tree_state,omitempty"`
	GitVersion   *string `json:"git_version,omitempty"`
	// Version of GO used to build version.
	GoVersion *string `json:"go_version,omitempty"`
	// Kubernetes major version
	Major *string `json:"major,omitempty"`
	// Kubernetes minor version
	Minor *string `json:"minor,omitempty"`
	// Platform compiled for
	Platform *string `json:"platform,omitempty"`
}

func (o *KubernetesVersionInfo) GetBuildDate() *string {
	if o == nil {
		return nil
	}
	return o.BuildDate
}

func (o *KubernetesVersionInfo) GetCompiler() *string {
	if o == nil {
		return nil
	}
	return o.Compiler
}

func (o *KubernetesVersionInfo) GetGitCommit() *string {
	if o == nil {
		return nil
	}
	return o.GitCommit
}

func (o *KubernetesVersionInfo) GetGitTreeState() *string {
	if o == nil {
		return nil
	}
	return o.GitTreeState
}

func (o *KubernetesVersionInfo) GetGitVersion() *string {
	if o == nil {
		return nil
	}
	return o.GitVersion
}

func (o *KubernetesVersionInfo) GetGoVersion() *string {
	if o == nil {
		return nil
	}
	return o.GoVersion
}

func (o *KubernetesVersionInfo) GetMajor() *string {
	if o == nil {
		return nil
	}
	return o.Major
}

func (o *KubernetesVersionInfo) GetMinor() *string {
	if o == nil {
		return nil
	}
	return o.Minor
}

func (o *KubernetesVersionInfo) GetPlatform() *string {
	if o == nil {
		return nil
	}
	return o.Platform
}
