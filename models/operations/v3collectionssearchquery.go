// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/censys/censys-sdk-go-internal/models/components"
)

type V3CollectionsSearchQueryGlobals struct {
	OrganizationID *string `queryParam:"style=form,explode=true,name=organization_id"`
}

func (o *V3CollectionsSearchQueryGlobals) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

type V3CollectionsSearchQueryRequest struct {
	// The ID of a Censys organization to associate the request with. See the [Getting Started docs](https://docs.censys.com/reference/get-started#/set-your-organization-id) for more information.
	OrganizationID *string `queryParam:"style=form,explode=false,name=organization_id"`
	// The UID for the collection
	CollectionUID        string                          `pathParam:"style=simple,explode=false,name=collection_uid"`
	SearchQueryInputBody components.SearchQueryInputBody `request:"mediaType=application/json"`
}

func (o *V3CollectionsSearchQueryRequest) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *V3CollectionsSearchQueryRequest) GetCollectionUID() string {
	if o == nil {
		return ""
	}
	return o.CollectionUID
}

func (o *V3CollectionsSearchQueryRequest) GetSearchQueryInputBody() components.SearchQueryInputBody {
	if o == nil {
		return components.SearchQueryInputBody{}
	}
	return o.SearchQueryInputBody
}

type V3CollectionsSearchQueryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ResponseEnvelopeSearchQueryResponse *components.ResponseEnvelopeSearchQueryResponse
	Headers                             map[string][]string
}

func (o *V3CollectionsSearchQueryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V3CollectionsSearchQueryResponse) GetResponseEnvelopeSearchQueryResponse() *components.ResponseEnvelopeSearchQueryResponse {
	if o == nil {
		return nil
	}
	return o.ResponseEnvelopeSearchQueryResponse
}

func (o *V3CollectionsSearchQueryResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
