// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/censys/censys-sdk-go/models/components"
)

type V3CollectionsCrudUpdateGlobals struct {
	OrganizationID *string `queryParam:"style=form,explode=true,name=organization_id"`
}

func (o *V3CollectionsCrudUpdateGlobals) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

type V3CollectionsCrudUpdateRequest struct {
	// The ID of a Censys organization to associate the request with. See the [Getting Started docs](https://docs.censys.com/reference/get-started#step-3-set-your-organization-id) for more information.
	OrganizationID *string `queryParam:"style=form,explode=false,name=organization_id"`
	// The UID for the collection
	CollectionUID       string                          `pathParam:"style=simple,explode=false,name=collection_uid"`
	CrudUpdateInputBody *components.CrudUpdateInputBody `request:"mediaType=application/json"`
}

func (o *V3CollectionsCrudUpdateRequest) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *V3CollectionsCrudUpdateRequest) GetCollectionUID() string {
	if o == nil {
		return ""
	}
	return o.CollectionUID
}

func (o *V3CollectionsCrudUpdateRequest) GetCrudUpdateInputBody() *components.CrudUpdateInputBody {
	if o == nil {
		return nil
	}
	return o.CrudUpdateInputBody
}

type V3CollectionsCrudUpdateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ResponseEnvelopeCollection *components.ResponseEnvelopeCollection
	Headers                    map[string][]string
}

func (o *V3CollectionsCrudUpdateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V3CollectionsCrudUpdateResponse) GetResponseEnvelopeCollection() *components.ResponseEnvelopeCollection {
	if o == nil {
		return nil
	}
	return o.ResponseEnvelopeCollection
}

func (o *V3CollectionsCrudUpdateResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
